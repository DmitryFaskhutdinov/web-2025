function initTogglePassword(tougleBtn, passBox, ImgOff, ImgOn) {
    const eyeButton = document.querySelector(tougleBtn);
    const passInput = document.querySelector( passBox);
    const eyeOff = document.querySelector(ImgOff);
    const eyeOn = document.querySelector(ImgOn);

    if (!eyeButton || !passInput || !eyeOff || !eyeOn) return;

    eyeButton.addEventListener('click', () => {
        const isPassword = passInput.type === "password";
        passInput.type = isPassword ? "text" : "password";
        eyeOff.style.display = isPassword ? "none" : "block";
        eyeOn.style.display = isPassword ? "block" : "none";
    });
}

initTogglePassword(
    ".login__eye-button",
    ".login__pass-box",
    ".login__eye-img--off",
    ".login__eye-img--on"
);

// –ª–æ–≥–∏–Ω-–∑–∞–ø—Ä–æ—Å
const form = document.querySelector('.login__form');
const errorBox = form.querySelector('.login__error-box');
const inputInfo = form.querySelector('.login__input-info');
const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

form.email.addEventListener('input', () => errorBox.classList.remove('show'));
form.password.addEventListener('input', () => errorBox.classList.remove('show'));

form.addEventListener('submit', async (event) => {
    event.preventDefault();

    const email = form.email.value.trim();
    const password = form.password.value.trim();

    form.email.classList.remove('error');
    form.password.classList.remove('error');
    inputInfo.classList.remove('error');

    errorBox.textContent = '';
    errorBox.classList.remove('show');

    if (!email || !password) {
        errorBox.textContent = "ü§ì –ü–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ";
        errorBox.classList.add('show');

        form.email.classList.add('error');
        form.password.classList.add('error');
        return;

    } else if (!emailPattern.test(email)) {
        errorBox.textContent = "ü§ì –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —ç–ª–µ–∫—Ç—Ä–æ–ø–æ—á—Ç—ã";
        errorBox.classList.add('show');

        form.email.classList.add('error');
        inputInfo.classList.add('error');
        return;
    }

    const response = await fetch('api.php?act=login', {
        method: 'POST',
        body: new URLSearchParams({email, password})
    });

    const result = await response.json();
    if (result.status === 'ok') {
        window.location.href = `profile.php?id=${result.user_id}`;
    } else {
        errorBox.textContent = "ü§• " + result.message; 
        errorBox.classList.add('show');

        form.email.classList.add('error');
        form.password.classList.add('error');
        inputInfo.classList.add('error');
    }
});

// to do: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
// to do: –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
// to do: response.ok –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
// to do: –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø—É—Å—Ç–æ–π result.user_id